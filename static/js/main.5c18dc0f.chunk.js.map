{"version":3,"sources":["components/card.js","components/cardList.js","components/searchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","style","height","src","id","alt","name","email","Cardlist","map","item","SearchBox","value","onChange","placeholder","type","App","props","handleChange","e","target","setState","searchField","state","monsters","fetch","then","res","json","users","this","filterMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAmBeA,EAjBF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACd,OACE,qBAAKC,UAAU,gBAAf,SACE,sBAAKA,UAAU,OAAOC,MAAO,CAAEC,OAAQ,SAAvC,UACE,qBACEC,IAAG,+BAA0BJ,EAAQK,GAAlC,0BACHC,IAAI,YAEN,sBAAKL,UAAU,YAAf,UACE,6BAAKD,EAAQO,OACb,4BAAIP,EAAQQ,iBCCPC,EAVE,SAAC,GAAiB,IAAfT,EAAc,EAAdA,QAClB,OACE,qBAAKC,UAAU,MAAf,SACGD,EAAQU,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,CAAMX,QAASW,UCSRC,EAdG,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC1B,OACE,qBAAKb,UAAU,OAAf,SACE,uBACEA,UAAU,2BACVc,YAAY,sBACZC,KAAK,SACLH,MAAOA,EACPC,SAAUA,OC8BHG,E,kDAnCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAYRC,aAAe,SAACC,GACd,IAAMP,EAAQO,EAAEC,OAAOR,MACvB,EAAKS,SAAS,CAAEC,YAAaV,KAb7B,EAAKW,MAAQ,CACXC,SAAU,GACVF,YAAa,IAJE,E,gEAOE,IAAD,OAClBG,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAW,EAAKR,SAAS,CAAEG,SAAUK,S,+BAQrC,IAAD,EAC2BC,KAAKP,MAA/BC,EADD,EACCA,SAAUF,EADX,EACWA,YACZS,EAAiBP,EAASQ,QAAO,SAACjC,GAAD,OACrCA,EAAQO,KAAK2B,cAAcC,SAASZ,EAAYW,kBAElD,OACE,8BACE,sBAAKjC,UAAU,6BAAf,UACE,oBAAIA,UAAU,mBAAd,6BACA,cAAC,EAAD,CAAWY,MAAOU,EAAaT,SAAUiB,KAAKZ,eAC9C,cAAC,EAAD,CAAUnB,QAASgC,a,GA7BXI,aCQHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5c18dc0f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = ({ monster }) => {\n  return (\n    <div className=\"col-md-3 mb-5\">\n      <div className=\"card\" style={{ height: \"350px\" }}>\n        <img\n          src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\n          alt=\"monster\"\n        />\n        <div className=\"card-body\">\n          <h2>{monster.name}</h2>\n          <p>{monster.email}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./card\";\n\nconst Cardlist = ({ monster }) => {\n  return (\n    <div className=\"row\">\n      {monster.map((item) => (\n        <Card monster={item} />\n      ))}\n    </div>\n  );\n};\n\nexport default Cardlist;\n","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <div className=\"mb-3\">\n      <input\n        className=\"form-control text-center\"\n        placeholder=\"Type a monster name\"\n        type=\"search\"\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport Cardlist from \"./components/cardList\";\nimport SearchBox from \"./components/searchBox\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange = (e) => {\n    const value = e.target.value;\n    this.setState({ searchField: value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filterMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div>\n        <div className=\"container py-5 text-center\">\n          <h1 className=\"text-center mb-5\">Monster Players</h1>\n          <SearchBox value={searchField} onChange={this.handleChange} />\n          <Cardlist monster={filterMonsters} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}